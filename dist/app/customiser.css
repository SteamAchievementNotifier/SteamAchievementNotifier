body[customiser][soundonly] .wrapper#customiser > .wrapper#webview,
body[customiser][soundonly] #customisercontent > #customiseropts > .cont:not(:has(.title#sound)),
#customiser[customfiles] .opt:has(#importtheme,#exporttheme),
.optcont:has(.opt > input[type="checkbox"]#glowrarity:checked) > .opt:has(#glow) > .opt:has(#glowcolor),
.optcont:has(.opt > input[type="checkbox"]#iconborderrarity:checked) > .opt:has(#iconborderimg) {
    opacity: 0.5;
    pointer-events: none;
}

body[customiser][opening] .wrapper#logo,
body[customiser][closing] .wrapper#customiserlogo {
    animation: customiserin var(--transition) cubic-bezier(0,-0.4,1,-0.5) forwards;
}

body[customiser][opening] .wrapper#maincontent,
body[customiser][closing] .wrapper#customiser {
    animation: customiserin var(--transition) cubic-bezier(1,0,1,0) forwards;
}

body[customiser][closing] .wrapper#logo,
body[customiser][closing] .wrapper#maincontent {
    scale: 0;
    animation: customiserout var(--transition) var(--transition) cubic-bezier(1,0,1,0) forwards;
}

body[customiser]:not([opening],[closing]) .wrapper#customiserlogo,
body[customiser]:not([opening],[closing]) .wrapper#customiser {
    animation: customiserout var(--transition) cubic-bezier(1,0,1,0) forwards;
}

/* Using this instead of "display: none" prevents "#progresscircle" from resetting animation when opening/closing Customiser while running */
body[customiser]:not([opening]) .wrapper#main > *:not(.wrapper#customiserlogo,.wrapper#customiser) {
    scale: 0;
    pointer-events: none;
}

/* Prevents ability to register a double-click on close button */
body[customiser][closing] button.menubtn#close {
    pointer-events: none;
}

body[main] .sub:has(#iconanim),
body[main] .opt:has(#iconshadowcolor),
body[main] .opt:has(#iconanimcolor),
body:not([main]) .cont:has( #iconanim:not(:checked)) ~ .cont:has(.title#colors) > .optcont > .opt:has(#iconshadowcolor),
body:not([main]) .cont:has( #iconanim:not(:checked)) ~ .cont:has(.title#colors) > .optcont > .opt:has(#iconanimcolor),
.optcont:has(.opt > select#soundmode > option[value="file"]:not(:checked)) > .opt:has(#soundfile),
.optcont:has(.opt > select#soundmode > option[value="folder"]:not(:checked)) > .opt:has(#sounddir),
.optcont:has(.opt > select#bgstyle > option[value="gradient"]:not(:checked)) > .opt > .opt:has(#gradientangle),
.optcont:has(.opt > select#bgstyle > option[value="bgimg"]:not(:checked)) > .opt > .opt:has(#bgimg),
.optcont:has(.opt > select#bgstyle > option[value="bgimg"]:not(:checked)) > .opt > .opt:has(#bgimgbrightness),
.optcont:has(.opt > select#bgstyle > option[value="gameart"]:not(:checked)) > .opt > .opt:has(#brightness),
.optcont:has(.opt > select#bgstyle > option[value="bgimg"]:not(:checked)) > .opt > .opt:has(#blur),
.optcont:has(.opt > select#bgstyle > option[value="gameart"]:not(:checked)) > .opt > .opt:has(#blur),
.optcont:has(.opt > input[type="checkbox"]#glow:not(:checked)) > .opt:has(#glow) > .opt:has(#glowcolor,#glowsize,#glowx,#glowy,#glowopacity,#glowanim,#glowspeed,#glowrarity,#glowcolorbronze,#glowcolorsilver,#glowcolorgold),
.optcont:has(.opt > select#glowanim > option[value="off"]:checked) > .opt > .opt:has(#glowspeed),
.optcont:has(.opt > input[type="checkbox"]#glowrarity:not(:checked)) > .opt:has(#glow) > .opt:has(#glowcolorbronze,#glowcolorsilver,#glowcolorgold),
body[main] .optcont:has(.opt > input[type="checkbox"]#glowrarity:checked) > .opt:has(#glow) > .opt:has(#glowcolorgold),
body[rare] .opt:has(#glow) > .opt:has(#glowrarity,#glowcolorbronze,#glowcolorsilver,#glowcolorgold),
body[plat] .opt:has(#glow) > .opt:has(#glowrarity,#glowcolorbronze,#glowcolorsilver,#glowcolorgold),
.optcont:has(.opt > input[type="checkbox"]#mask:not(:checked)) > .opt:has(#mask) > .opt:has(#maskimg),
.optcont:has(.opt > input[type="checkbox"]#fontoutline:not(:checked)) > .opt:has(#fontoutline) > .opt:has(#fontoutlinecolor,#fontoutlinescale),
.optcont:has(.opt > input[type="checkbox"]#fontshadow:not(:checked)) > .opt:has(#fontshadow) > .opt:has(#fontshadowcolor,#fontshadowscale),
.optcont:has(.opt > input[type="checkbox"]#usecustomicons:not(:checked)) > .opt:has(#usecustomicons) > .opt:has(.img#logo,.img#decoration,.customicon[id^="decoration"]),
.optcont:has(.opt > input[type="checkbox"]#showhiddenicon:not(:checked)) > .opt:has(.img#hiddenicon),
.optcont:has(.opt > input[type="checkbox"]#showiconborder:not(:checked)) > .opt:has(.iconborder),
.optcont:has(.opt > input[type="checkbox"]#usecustompos:not(:checked)) > .opt#posbtns,
.optcont:has(.opt > .img#logo[novalue]) > .opt:has(input#replacelogo),
.optcont:has(.opt > .img[id="decoration1"][novalue]):has(.opt > .img[id="decoration2"][novalue]):has(.opt > .img[id="decoration3"][novalue]) > .opt:has(input#replacelogo),
#customiseropts:has(.wrapper#elemselector > .wrapper > .wrapper > select#unlockmsg > option[value="off"]:checked) > .wrapper:has(.title#preset) > .optcont > .opt:has(#customtext),
body[plat] #customisercontent .wrapper:has(> #showhiddenicon),
body[plat] #customisercontent .wrapper:has(> .img#hiddenicon),
.opt:has(#alldetails),
.opt[nodecoration],
.opt:has(#usepercent),
#customiseropts:has(.opt > select#bgstyle > option[value="solid"]:checked) .opt:has(#secondarycolor),
.opt:has(#tertiarycolor),
#customiseropts:has(.opt > select#preset > option[value="steamdeck"]:checked) .opt:has(#alldetails:not(:checked)) ~ .opt:has(#customtext),
#customiseropts:has(.opt > select#preset > option[value="epicgames"]:checked) .opt:has(#alldetails:not(:checked)) ~ .opt:has(#customtext),
#customiseropts:has(.opt > select#preset > option[value="ps5"]:checked) .opt:has(#alldetails:not(:checked)) ~ .opt:has(#customtext),
#customiseropts:has(.opt > select#preset > option[value="ps4"]:checked) .opt:has(#alldetails:not(:checked)) ~ .opt:has(#customtext),
.opt:has(select#outline > option[value="off"]:checked) > .opt,
.opt:has(input#usegameicon:not(:checked)) > .opt.sub:has(select#gameicontype),
.opt:has(input#usecustomimgicon:not(:checked)) + .opt:has(.img#customimgicon),
.optcont:has(input#usegameicon:checked) > .opt:has(input#usecustomimgicon),
.optcont:has(input#usecustomimgicon:checked) > .opt:has(input#usegameicon),
.opt:has(.customcontrol > input:not(:checked)) > .customopt:has(input[id^="unlockmsg"]),
.opt:has(.customcontrol > input:not(:checked)) > .customopt:has(input[id^="title"]),
.opt:has(.customcontrol > input:not(:checked)) > .customopt:has(input[id^="desc"]),
body:not([main]) .opt:has(input#iconborderrarity),
body:not([main]) .opt:has(input#iconborderrarity) ~ .opt:has(.img[id^="iconborderimg"]),
.opt:has(input#iconborderrarity:not(:checked)) ~ .opt:has(.img[id^="iconborderimg"]) {
    display: none;
}

#customiseropts:has(.opt > select#preset > option[value="default"]:checked) > .cont:has(select#bgstyle > option[value="bgimg"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#primarycolor),
#customiseropts:has(.opt > select#preset > option[value="default"]:checked) > .cont:has(select#bgstyle > option[value="gameart"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#primarycolor),
#customiseropts:has(.opt > select#preset > option[value="default"]:checked) > .cont:has(select#bgstyle > option[value="bgimg"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#secondarycolor),
#customiseropts:has(.opt > select#preset > option[value="default"]:checked) > .cont:has(select#bgstyle > option[value="gameart"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#secondarycolor),
#customiseropts:has(.opt > select#preset > option[value="steamdeck"]:checked) > .cont:has(select#bgstyle > option[value="bgimg"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#primarycolor),
#customiseropts:has(.opt > select#preset > option[value="steamdeck"]:checked) > .cont:has(select#bgstyle > option[value="gameart"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#primarycolor),
#customiseropts:has(.opt > select#preset > option[value="steamdeck"]:checked) > .cont:has(select#bgstyle > option[value="bgimg"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#secondarycolor),
#customiseropts:has(.opt > select#preset > option[value="steamdeck"]:checked) > .cont:has(select#bgstyle > option[value="gameart"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#secondarycolor),
#customiseropts:has(.opt > select#preset > option[value="epicgames"]:checked) > .cont:has(select#bgstyle > option[value="bgimg"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#primarycolor),
#customiseropts:has(.opt > select#preset > option[value="epicgames"]:checked) > .cont:has(select#bgstyle > option[value="gameart"]:checked) ~ .cont:has(input#primarycolor) > .optcont > .opt:has(input#primarycolor),
#customiseropts:has(.opt > select#preset > option[value="epicgames"]:checked) > .cont:has(select#bgstyle > option[value="bgimg"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#secondarycolor),
#customiseropts:has(.opt > select#preset > option[value="epicgames"]:checked) > .cont:has(select#bgstyle > option[value="gameart"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#secondarycolor),
#customiseropts:has(.opt > select#preset > option[value="xboxone"]:checked) > .cont:has(select#bgstyle > option[value="bgimg"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#primarycolor),
#customiseropts:has(.opt > select#preset > option[value="xboxone"]:checked) > .cont:has(select#bgstyle > option[value="gameart"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#primarycolor),
#customiseropts:has(.opt > select#preset > option[value="xbox360"]:checked) > .cont:has(select#bgstyle > option[value="bgimg"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#primarycolor),
#customiseropts:has(.opt > select#preset > option[value="xbox360"]:checked) > .cont:has(select#bgstyle > option[value="gameart"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#primarycolor),
#customiseropts:has(.opt > select#preset > option[value="xbox360"]:checked) > .cont:has(select#bgstyle > option[value="bgimg"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#secondarycolor),
#customiseropts:has(.opt > select#preset > option[value="xbox360"]:checked) > .cont:has(select#bgstyle > option[value="gameart"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#secondarycolor),
#customiseropts:has(.opt > select#preset > option[value="ps5"]:checked) > .cont:has(select#bgstyle > option[value="bgimg"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#primarycolor),
#customiseropts:has(.opt > select#preset > option[value="ps5"]:checked) > .cont:has(select#bgstyle > option[value="gameart"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#primarycolor),
#customiseropts:has(.opt > select#preset > option[value="ps5"]:checked) > .cont:has(select#bgstyle > option[value="bgimg"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#secondarycolor),
#customiseropts:has(.opt > select#preset > option[value="ps5"]:checked) > .cont:has(select#bgstyle > option[value="gameart"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#secondarycolor),
#customiseropts:has(.opt > select#preset > option[value="ps4"]:checked) > .cont:has(select#bgstyle > option[value="bgimg"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#primarycolor),
#customiseropts:has(.opt > select#preset > option[value="ps4"]:checked) > .cont:has(select#bgstyle > option[value="gameart"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#primarycolor),
#customiseropts:has(.opt > select#preset > option[value="ps4"]:checked) > .cont:has(select#bgstyle > option[value="bgimg"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#secondarycolor),
#customiseropts:has(.opt > select#preset > option[value="ps4"]:checked) > .cont:has(select#bgstyle > option[value="gameart"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#secondarycolor),
#customiseropts:has(.opt > select#preset > option[value="ps3"]:checked) > .cont:has(select#bgstyle > option[value="bgimg"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#primarycolor),
#customiseropts:has(.opt > select#preset > option[value="ps3"]:checked) > .cont:has(select#bgstyle > option[value="gameart"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#primarycolor),
#customiseropts:has(.opt > select#preset > option[value="ps3"]:checked) > .cont:has(select#bgstyle > option[value="bgimg"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#secondarycolor),
#customiseropts:has(.opt > select#preset > option[value="ps3"]:checked) > .cont:has(select#bgstyle > option[value="gameart"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#secondarycolor),
#customiseropts:has(.opt > select#preset > option[value="windows"]:checked) > .cont:has(select#bgstyle > option[value="bgimg"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#primarycolor),
#customiseropts:has(.opt > select#preset > option[value="windows"]:checked) > .cont:has(select#bgstyle > option[value="gameart"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#primarycolor),
#customiseropts:has(.opt > select#preset > option[value="windows"]:checked) > .cont:has(select#bgstyle > option[value="bgimg"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#secondarycolor),
#customiseropts:has(.opt > select#preset > option[value="windows"]:checked) > .cont:has(select#bgstyle > option[value="gameart"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#secondarycolor),
#customiseropts:has(.opt > select#preset > option[value="gfwl"]:checked) > .cont:has(select#bgstyle > option[value="bgimg"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#secondarycolor),
#customiseropts:has(.opt > select#preset > option[value="gfwl"]:checked) > .cont:has(select#bgstyle > option[value="gameart"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#secondarycolor) {
    display: none;
}

#customiseropts:has(.opt > select#preset > option[value="default"]:checked) > .cont:has(select#bgstyle > option[value="bgimg"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#fontcolor),
#customiseropts:has(.opt > select#preset > option[value="default"]:checked) > .cont:has(select#bgstyle > option[value="gameart"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#fontcolor),
#customiseropts:has(.opt > select#preset > option[value="steamdeck"]:checked) > .cont:has(select#bgstyle > option[value="bgimg"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#fontcolor),
#customiseropts:has(.opt > select#preset > option[value="steamdeck"]:checked) > .cont:has(select#bgstyle > option[value="gameart"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#fontcolor),
#customiseropts:has(.opt > select#preset > option[value="epicgames"]:checked) > .cont:has(select#bgstyle > option[value="bgimg"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#tertiarycolor),
#customiseropts:has(.opt > select#preset > option[value="epicgames"]:checked) > .cont:has(select#bgstyle > option[value="gameart"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#tertiarycolor),
#customiseropts:has(.opt > select#preset > option[value="xboxone"]:checked) > .cont:has(select#bgstyle > option[value="bgimg"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#secondarycolor),
#customiseropts:has(.opt > select#preset > option[value="xboxone"]:checked) > .cont:has(select#bgstyle > option[value="gameart"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#secondarycolor),
#customiseropts:has(.opt > select#preset > option[value="xbox360"]:checked) > .cont:has(select#bgstyle > option[value="bgimg"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#tertiarycolor),
#customiseropts:has(.opt > select#preset > option[value="xbox360"]:checked) > .cont:has(select#bgstyle > option[value="gameart"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#tertiarycolor),
#customiseropts:has(.opt > select#preset > option[value="ps5"]:checked) > .cont:has(select#bgstyle > option[value="bgimg"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#tertiarycolor),
#customiseropts:has(.opt > select#preset > option[value="ps5"]:checked) > .cont:has(select#bgstyle > option[value="gameart"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#tertiarycolor),
#customiseropts:has(.opt > select#preset > option[value="ps4"]:checked) > .cont:has(select#bgstyle > option[value="bgimg"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#tertiarycolor),
#customiseropts:has(.opt > select#preset > option[value="ps4"]:checked) > .cont:has(select#bgstyle > option[value="gameart"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#tertiarycolor),
#customiseropts:has(.opt > select#preset > option[value="ps3"]:checked) > .cont:has(select#bgstyle > option[value="bgimg"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#fontcolor),
#customiseropts:has(.opt > select#preset > option[value="ps3"]:checked) > .cont:has(select#bgstyle > option[value="gameart"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#fontcolor),
#customiseropts:has(.opt > select#preset > option[value="windows"]:checked) > .cont:has(select#bgstyle > option[value="bgimg"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#fontcolor),
#customiseropts:has(.opt > select#preset > option[value="windows"]:checked) > .cont:has(select#bgstyle > option[value="gameart"]:checked) ~ .cont:has(.title#colors) > .optcont > .opt:has(input#fontcolor) {
    margin-top: 0;
}

#customiseropts:has(.opt > select#preset > option[value="default"]:checked) > .cont:has(.title#colors) > .optcont > .opt:has(#secondarycolor),
#customiseropts:has(.opt > select#preset > option[value="xqjan"]:checked) > .cont:has(.title#colors) > .optcont > .opt:has(#secondarycolor),
#customiseropts:has(.opt > select#preset > option[value="xboxone"]:checked) > .cont:has(.title#colors) > .optcont > .opt:has(#secondarycolor),
#customiseropts:has(.opt > select#preset > option[value="xqjan"]:checked) .opt:has(#tertiarycolor),
#customiseropts:has(.opt > select#preset > option[value="epicgames"]:checked) .opt:has(#tertiarycolor),
#customiseropts:has(.opt > select#preset > option[value="xbox360"]:checked) .opt:has(#tertiarycolor),
#customiseropts:has(.opt > select#preset > option[value="ps5"]:checked) .opt:has(#tertiarycolor),
#customiseropts:has(.opt > select#preset > option[value="ps4"]:checked) .opt:has(#tertiarycolor),
#customiseropts:has(.opt > select#preset > option[value="gfwl"]:checked) .opt:has(#tertiarycolor),
#customiseropts:has(.opt > select#preset > option[value="steamdeck"]:checked) .opt:has(#alldetails),
#customiseropts:has(.opt > select#preset > option[value="epicgames"]:checked) .opt:has(#alldetails),
#customiseropts:has(.opt > select#preset > option[value="xbox360"]:checked) .opt:has(#alldetails),
#customiseropts:has(.opt > select#preset > option[value="ps5"]:checked) .opt:has(#alldetails),
#customiseropts:has(.opt > select#preset > option[value="ps4"]:checked) .opt:has(#alldetails),
#customiseropts:has(.opt > select#preset > option[value="ps3"]:checked) .opt:has(#alldetails),
#customiseropts:has(.opt > select#preset > option[value="epicgames"]:checked) .opt:has(#usepercent),
#customiseropts:has(.opt > select#preset > option[value="xboxone"]:checked) .opt:has(#usepercent),
#customiseropts:has(.opt > select#preset > option[value="xbox360"]:checked) .opt:has(#usepercent),
.optcont:has(.opt > select#bgstyle > option[value="bgimg"]:checked) > .opt > .opt:has(#blur),
.optcont:has(.opt > select#bgstyle > option[value="gameart"]:checked) > .opt > .opt:has(#blur) {
    display: grid;
}

body[customiser][closing] .wrapper#main > *:not(.wrapper#customiserlogo,.wrapper#customiser) {
    display: grid;
}

@keyframes customiserin {
    from { scale: 1; }
    to { scale: 0; }
}

@keyframes customiserout {
    from { scale: 0; }
    to { scale: 1; }
}

.wrapper#customiserlogo,
.wrapper#customiser {
    scale: 0;
}

.wrapper#customiser {
    grid-template-columns: 1fr auto;
    place-self: center;
    gap: 1rem;
    width: 75vw;
    height: 100%;
    grid-column-start: 1;
    grid-row-start: 2;
}

.wrapper#webview {
    grid-template-rows: 1fr auto;
    gap: 1rem;
    padding: 1rem;
    background-color: var(--darkgrey);
    border-radius: var(--elembr);
    overflow: hidden;
}

.wrapper > .wrapper#webview > .wrapper:has(webview) {
    --width: 300;
    --height: 50;
    position: relative;
    top: 50%;
    left: 50%;
    translate: -50% -50%;
    /* Workaround: Setting `wrapper`'s width/height to `0` ensures all previews are centered in the Customiser while still displaying content */
    width: 0;
    height: 0;
    aspect-ratio: var(--width) / var(--height);
}

webview {
    position: absolute;
    top: 50%;
    left: 50%;
    translate: -50% -50%;
    min-width: 0;
    min-height: 0;
    place-content: center;
    transition: calc(var(--transition) / 2);
    width: calc(var(--width) * 1px);
    height: calc(var(--height) * 1px);
    aspect-ratio: var(--width) / var(--height);
}

#customiser:has(select#preset > option[value="xqjan"]:checked) webview {
    --scale: 0.85;
    width: calc(var(--width) * var(--scale));
    height: calc(var(--height) * var(--scale));
    aspect-ratio: calc(var(--width) * var(--scale)) / calc(var(--height) / var(--scale));
}

span#nopreview {
    place-self: center;
    color: #808080;
    font-size: 0.85rem;
    font-style: italic;
}

.wrapper#webview > .wrapper#webviewbtns {
    grid-auto-flow: column;
    place-content: center;
    gap: 1rem;
}

.wrapper#webviewbtns > #playback {
    --icon: url("../../icon/pause.svg");
}

.wrapper#webviewbtns > #playback[paused] {
    --icon: url("../../icon/play.svg");
}

.wrapper#webviewbtns > #replay {
    --icon: url("../../icon/replay.svg");
}

.wrapper#customisertabs {
    position: sticky;
    top: 0;
    grid-template-columns: auto 1fr auto;
    place-items: center;
    gap: 0.5rem;
    padding-bottom: 1rem;
    font-size: 0.75rem;
    background-color: #1b1b1b;
    z-index: 1;
}

.wrapper#customisertabs > button {
    display: grid;
    place-items: center;
    padding: 0.15rem;
    background-color: transparent;
    border-radius: var(--elembr);
    transition:
        background-color var(--transition),
        filter var(--transition);
}

.wrapper#customisertabs > button:hover {
    background-color: black;
    filter: invert();
}

.wrapper#customisertabs > button::before {
    content: "";
    display: block;
    width: 1rem;
    height: 1rem;
    background: url("../../icon/play.svg") center / contain no-repeat;
}

.wrapper#customisertabs > #customiserbackbtn::before {
    rotate: 180deg;
}

.wrapper#customisertabs > .wrapper#customisertablbl::before {
    content: "";
    display: block;
    justify-self: end;
    width: 1rem;
    height: 1rem;
    background: var(--icon) center / contain no-repeat;
}

body[main] .wrapper#customisertabs > .wrapper#customisertablbl::before {
    --icon: url("../../icon/trophy_gold.svg");
}

body[rare] .wrapper#customisertabs > .wrapper#customisertablbl::before {
    --icon: url("../../icon/trophy_purple.svg");
}

body[plat] .wrapper#customisertabs > .wrapper#customisertablbl::before {
    --icon: url("../../icon/trophy_plat.svg");
}

.wrapper#customisertabs > .wrapper#customisertablbl {
    grid-template-columns: auto auto;
    gap: 0.5rem;
    justify-items: start;
    align-items: center;
    width: 100%;
    padding: 0.15rem 0.25rem;
    background-color: var(--primary);
    border-radius: var(--elembr);
    transition: background-color var(--transition);
}

body[main] .wrapper#customisertabs > #customiserbackbtn,
body[plat] .wrapper#customisertabs > #customisernextbtn,
.opt:has(input[type="range"]#opacity)[value="100"] > .sub:has(input[type="checkbox"]#bgonly),
.optcont > .opt[novalue],
.optcont:has(input[type="checkbox"]#usegameicon:checked) > .opt:has(.optbtn#plat) {
    opacity: 0.5;
    pointer-events: none;
}

.optcont > .opt[novalue] > input[type="checkbox"]:checked,
.opt:has(input[type="range"]#opacity)[value="100"] input[type="checkbox"]#bgonly {
    background-color: var(--darkgrey);
}

.opt:has(> .optbtn.img[novalue]) {
    display: none;
}

#customisercontent {
    position: relative;
    min-width: 30vw;
    padding-right: 1rem;
    overflow: hidden scroll;
}

#customisercontent > #customiseropts {
    position: absolute;
    display: grid;
    width: 100%;
    padding-right: 1rem;
}

.cont:has(.title#preset) > .title::before {
    --icon: url("../../icon/preset.svg");
}

.cont:has(.title#sound) > .title::before {
    --icon: url("../../icon/musicnote.svg");
}

.cont:has(.title#style) > .title::before {
    --icon: url("../../icon/style.svg");
}

.cont:has(.title#colors) > .title::before {
    --icon: url("../../icon/colors.svg");
}

.cont:has(.title#icons) > .title::before {
    --icon: url("../../icon/icon.svg");
}

.cont:has(.title#position) > .title::before {
    --icon: url("../../icon/position.svg");
}

.cont:has(.title#theme) > .title::before {
    --icon: url("../../icon/stars.svg");
}

.opt:has(> select#bgstyle) > .opt,
.opt:has(> select#outline) > select#outline,
.opt:has(> select#outline) > .opt {
    grid-column: 1 / -1;
}

body[customiser] .opt:has(> .lbl):not(:first-child) {
    margin-top: 0.5rem;
}

.img#logo,
.img[id^="decoration"],
.img#plat,
.img#hiddenicon,
.img#customimgicon,
.img[id*="percentbadgeimg"],
.opt:has(.iconborder) > .img {
    min-height: 3.5rem;
    background: var(--img) center / 25% no-repeat var(--darkgrey);
}

.optbtn.img:hover {
    filter: brightness(75%);
}

.opt:has(> #gradientangle) {
    grid-template-columns: 1fr auto auto;
    gap: 0;
}

#posbtns {
    grid-template-columns: 1fr 1fr;
    grid-template-rows: auto;
    gap: 0.5rem;
}

.opt:has(#preview),
.opt:has(#updatetheme,#savetheme,#importtheme,#exporttheme) {
    grid-template-columns: 1fr;
    gap: 0;
}

#preview,
.cont:has(.wrapper#theme) button.rect,
#posbtns > button,
.wrapper#elemselector button.rect {
    grid-template-columns: auto auto;
    justify-items: start;
    align-items: center;
    gap: 0.25rem;
    width: 100%;
    height: 100%;
    font-size: 0.7rem;
    background-color: var(--primary);
    border-radius: var(--elembr);
}

#preview::before,
.cont:has(.title#theme) button.rect::before,
#posbtns > button::before,
.wrapper#elemselector button.rect::before {
    content: "";
    display: block;
    justify-self: end;
    width: 0.75rem;
    height: 0.75rem;
    background: var(--icon) center / contain no-repeat;
    margin: 0;
}

#preview > span,
.cont:has(.title#theme) button.rect > span,
#posbtns > button > span,
.wrapper#elemselector button.rect > span {
    max-width: none;
    padding: 0.25rem;
}

#preview {
    --icon: url("../../icon/volume.svg");
}

#preview[playing]::before {
    --icon: url("../../icon/stop.svg");
}

#preview[playing]::before,
#preview[playing] > span {
    filter: invert();
}

#preview[playing]::after {
    translate: 0;
}

#customiseropts > .cont:has(+ .opt) {
    margin-bottom: 0.5rem;
}

.opt:has(select#themeselect) {
    grid-template-columns: auto auto;
    background-color: var(--bggrey);
    padding-top: 0.5rem;
    margin: 0;
    z-index: 10;
}

select#themeselect {
    grid-column: 1 / -1;
}

.opt:has(select#themeselect)[sticky] {
    position: sticky;
    bottom: 0;
}

.opt:has(select#themeselect)[sticky] > .pinbtn {
    rotate: -45deg;
    opacity: 1;
}

#customiseropts > .opt:has(select#themeselect) + .cont {
    margin-top: 1rem;
}

#updatetheme {
    --icon: url("../../icon/reset.svg");
}

button[updated] {
    pointer-events: none;
}

button[updated] > span,
button[updated]::before {
    scale: 0;
}

button[updated]::after {
    translate: 0;
}

button:has(#confirm) {
    position: relative;
    transition: background-color var(--transition), scale var(--transition);
}

button > #confirm {
    position: absolute;
    top: 50%;
    left: 50%;
    translate: -50% -50%;
    scale: 0;
    background: url("../../icon/thumbsup.svg") center / contain no-repeat;
    width: 1rem;
    height: 1rem;
    transition: scale 0s;
    filter: invert();
}

button[updated] > #confirm {
    scale: 1;
    transition: scale var(--transition);
    animation: updated calc(var(--transition) * 3) forwards;
}

/* Dummy animation to trigger "animationend" event in TS */
@keyframes updated {
    to { color: transparent }
}

#savetheme {
    --icon: url("../../icon/update_white.svg");
}

#posbtns > #setcustompos {
    --icon: url("../../icon/recenter.svg");
}

#posbtns > #resetcustompos {
    --icon: url("../../icon/reset.svg");
    background-color: #ff000080;
}

#customiser[poswin] .sub:has(#usecustompos),
#customiser[poswin] #posbtns > *,
#customisercontent:has(input#showdecoration:not(:checked)):has(input#replacelogo:not(:checked)) .opt:has(.optbtn[id^="decoration"]),
#customisercontent:has([id^="decoration"]:not(#decorationpos,[novalue])) #customiseropts:has(input#replacelogo:checked) .opt:has(.optbtn[id="logo"]),
#customiseropts:has(.opt > select#preset > option[value="os"]:checked) .opt:not(:has([os])) {
    opacity: 0.5;
    pointer-events: none;
}

.opt.visibility {
    grid-template-columns: 1fr min-content min-content;
    column-gap: 0.5rem;
}

.visibility > .img {
    grid-column: 1 / span 3;
}

.visibility > .menubtn.visibilitybtn {
    grid-column-start: 2;
    grid-row-start: 1;
    width: 1rem;
    height: 1rem;
    background: var(--visibility) center / contain no-repeat;
}

.visibility > .delbtn {
    grid-column-start: 3;
}

.opt:has(#importtheme) {
    margin-top: 0.5rem;
}

.opt:has(#importtheme,#exporttheme) > button::before {
    width: 1.5rem !important;
    height: 1.5rem !important;
}

button#importtheme {
    --icon: url("../../icon/import.svg");
}

button#exporttheme {
    --icon: url("../../icon/export.svg");
}

body:not([main]) #customiser[synced="main"] .cont:has(.title) > .wrapper,
body:not([rare]) #customiser[synced="rare"] .cont:has(.title) > .wrapper,
body:not([plat]) #customiser[synced="plat"] .cont:has(.title) > .wrapper,
body[themeswitch] #customiser .cont:has(.title) > .wrapper,
#customiser[synced] .cont:has(.title#theme) button {
    opacity: 0.5;
    pointer-events: none;
}

@media (orientation: portrait) or (width < 400px) {
    .wrapper#customiser {
        grid-template-columns: 1fr;
        grid-template-rows: min-content;
    }
    
    .wrapper#webview {
        grid-template-rows: repeat(2,min-content);
    }

    .contentsub {
        grid-template-columns: 1fr;
    }

    .contentsub::before {
        margin: 0;
        padding: 0;
    }
}