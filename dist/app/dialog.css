:root {
    --dialogicon: url("../../icon/info.svg");
}

dialog,
::backdrop {
    width: 100vw;
    max-width: 100vw;
    height: 100vh;
    max-height: 100vh;
    overflow: hidden;
    -webkit-app-region: no-drag;
}

::backdrop {
    opacity: 0;
}

dialog {
    --primary: #203e7a;
    border: none;
    background-color: #000000d7;
    opacity: 0;
    border-radius: var(--winbr);
}

@keyframes dialogin {
    from { opacity: 0; }
    to { opacity: 1; }
}

@keyframes dialogout {
    from { opacity: 1; }
    to { opacity: 0; }
}

dialog[open] {
    animation: dialogin calc(var(--transition) / 2) forwards;
}

dialog > #content {
    display: flex;
    place-self: center;
    flex-direction: column;
    scale: 0;
    background-color: #1b1b1b;
    color: white;
    border-radius: var(--winbr);
    width: 50%;
    height: fit-content;
    transition: scale var(--transition);
    transition-timing-function: cubic-bezier(0,0,1,-0.75);
    transition-delay: 0s;
}

dialog[open] > #content[open] {
    scale: 1;
    transition-timing-function: cubic-bezier(0,1.75,1,1);
    transition-delay: calc(var(--transition) / 2);
}

.contentwrapper {
    display: grid;
    grid-template-rows: 1fr auto;
    place-items: center;
    gap: 1rem;
    padding: 1.5rem;
    width: 100%;
    height: 100%;
}

dialog[selection] .contentwrapper {
    grid-template-rows: auto auto;
    gap: 0;
}

.contentwrapper > .wrapper#contentcontainer {
    display: grid;
    place-items: center;
    width: 100%;
}

.contenttitle {
    display: grid;
    grid-template-columns: auto auto;
    place-content: center;
    gap: 0.5rem;
    width: 100%;
    padding: 0.35rem;
    background-color: var(--primary);
    border-radius: var(--elembr) var(--elembr) 0 0;
    text-align: center;
    text-transform: uppercase;
}

.contenttitle::before {
    content: "";
    background: var(--dialogicon) center / contain no-repeat;
    place-self: center;
    width: 1rem;
    height: 1rem;
}

.contentsub {
    display: grid;
    grid-template-columns: auto 1fr;
    width: 100%;
    padding: 0.75rem;
    background-color: #101010;
    border-radius: 0 0 var(--elembr) var(--elembr);
    font-size: 0.65rem;
}

dialog[selection] .contentwrapper .contentsub {
    grid-template-columns: 1fr;
    grid-template-rows: auto;
    gap: 0.7rem;
    padding: 0.7rem 1rem;
    overflow: hidden auto;
    max-height: 30vh;
    will-change: contents;
}

.contentsub::before {
    content: "";
    background: url("../../icon/info.svg") center / contain no-repeat;
    width: 1rem;
    height: 1rem;
    padding-right: 1rem;
    margin-right: 0.35rem;
    place-self: center;
}

dialog[selection] .contentwrapper .contentsub::before {
    display: none;
}

dialog[selection] .contentwrapper .contentsub > button.rect {
    grid-template-columns: auto auto;
    gap: 0.7rem;
    width: 100%;
    min-height: 8vh;
    transition: opacity var(--transition);
}

dialog[selection] .contentwrapper .contentsub > .rect::before {
    justify-self: end;
    margin-right: 0;
}

dialog[selection] .contentwrapper .contentsub > .rect > span {
    justify-self: start;
    padding-inline: 0;
}

.wrapper#contentsubitems {
    gap: 0.25rem;
}

.wrapper#contentsubitems > div:has(.contentsubitem) {
    display: grid;
    grid-template-columns: auto 1fr;
    text-wrap: wrap;
    column-gap: 0.25rem;
}

.contentsubitem::before {
    content: "â€¢";
    margin-right: 0.25rem;
}

div:has(> .contentsubitem[nobefore]) {
    margin-bottom: 1rem;
}

.contentsubitem[nobefore]::before {
    content: none;
}

.wrapper#contentcontainer:has(.wrapper#resetsub) .contenttitle {
    background-color: red;
}

.wrapper#resetsub {
    gap: 0.25rem;
}

.wrapper#resetsub > span:nth-child(3) {
    color: #ff000080;
    animation: flash calc(var(--transition) * 2.5) alternate infinite;
}

@keyframes flash {
    to { color: #ff0000; }
}

.btnwrapper {
    display: grid;
    grid-template-columns: repeat(var(--columns),1fr);
    gap: 0.75rem;
    width: 100%;
    height: 100%;
}

.btnwrapper:has(> button:nth-child(1)) {
    --columns: 1;
}

.btnwrapper:has(> button:nth-child(2)) {
    --columns: 2;
}

.btnwrapper > button:nth-child(1) {
    grid-column-start: 1;
}

.btnwrapper > button:nth-child(2) {
    grid-column-start: 2;
}

.btnwrapper:has(button#userthemesync) {
    justify-content: stretch;
}

dialog:not([default]):not(:has(button#userthemesync)) .btnwrapper {
    display: none;
}

.btnwrapper > button {
    display: flex;
    align-items: center;
    gap: 0.35rem;
    place-content: center;
    height: 1.75rem;
    padding: 0.25rem;
    font-family: "Titillium Web","Roboto";
    border-radius: var(--elembr);
    background-color: var(--primary);
    color: white;
    transition:
        background-color var(--transition),
        opacity var(--transition);
    text-transform: uppercase;
    will-change: contents;
}

.btnwrapper > button:hover {
    background-color: black;
    color: white;
    filter: invert();
}

.btnwrapper > button::before {
    content: "";
    background: var(--icon) center / contain no-repeat;
    align-self: center;
    width: 1rem;
    height: 1rem;
}

#okbtn::before {
    background: url("../../icon/tick.svg") center / contain no-repeat;
}

#backbtn::before {
    background: url("../../icon/back.svg") center / contain no-repeat;
}

#okbtn:hover,
#updatebtn:hover,
#backbtn:hover,
#userthemesync:hover,
#betaexitbtn:hover,
#betaghreleasesbtn:hover {
    filter: none;
}

#okbtn:hover,
#okbtn:focus-visible,
#updatebtn:hover,
#updatebtn:focus-visible,
#betaghreleasesbtn:hover,
#betaghreleasesbtn:focus-visible {
    background-color: limegreen;
}

div:has(> span.contentsubitem):has(#newversion) {
    --args: 0 0;
    grid-template-columns: 1fr !important;
    place-self: center;
    place-items: center;
    padding-inline: 0.5rem;
    margin-right: 2.35rem;
    margin-bottom: 0.25rem;
    font-size: 1rem;
    background-color: var(--primary);
    border-radius: var(--elembr);
    animation:
        glow1 calc(var(--transition) * 12) linear alternate infinite,
        glow2 calc(var(--transition) * 15) ease-in-out infinite;
}

@keyframes glow1 {
    from { filter: drop-shadow(0 0 0.15rem #9e9eff); }
    50% { filter: drop-shadow(0 0 0.2rem #00bfff); }
    to { filter: drop-shadow(0 0 0.25rem #ffd700); }
}

@keyframes glow2 {
    from { box-shadow: -0.5rem 0 0.35rem transparent; }
    25% { box-shadow: 0 0 0.35rem #ffffff40; }
    50% { box-shadow: 0.5rem 0 0.35rem transparent; }
}

span.contentsubitem:has(#newversion)::before {
    display: none;
}

body[updating] dialog #updatebtn {
    --icon: url("../../icon/reset.svg") !important;
    background-color: limegreen;
    opacity: 0.5;
    pointer-events: none;
}

body[updating] dialog #updatebtn::before {
    animation: spin calc(var(--transition) * 5) infinite;
}

@keyframes spin {
    to { rotate: 360deg; }
}

dialog .wrapper:has(> #progressbar) {
    --progress: 0%;
    width: 100%;
    display: grid;
    border-radius: var(--elembr);
    isolation: isolate;
    overflow: hidden;
}

dialog .wrapper:has(> #progressbar)::before {
    content: "";
    justify-self: start;
    width: var(--progress);
    height: 100%;
    background-color: #203e7a;
    transition: var(--transition);
    grid-column-start: 1;
    grid-row-start: 1;
    box-shadow: 0 0 0.5rem 0.15rem #1b1b1b40;
}

dialog #progressbar {
    place-self: center;
    background-color: var(--mediumgrey);
    width: 100%;
    height: 2rem;
    z-index: -1;
    grid-column-start: 1;
    grid-row-start: 1;
}

#backbtn:hover,
#backbtn:focus-visible,
#betaexitbtn:hover,
#betaexitbtn:focus-visible {
    background-color: red;
}

body[main] dialog:has([id*="theme"]) {
    --primary: #203e7a;
}

body[rare] dialog:has([id*="theme"]) {
    --primary: #663399;
}

body[plat] dialog:has([id*="theme"]) {
    --primary: #4e75c9;
}

dialog[selection] .rect[enabled] {
    background-color: var(--primary);
    pointer-events: none;
}

dialog[selection] .rect:not([enabled]) {
    background-color: #2b2b2b;
}

dialog[selection] .rect[id^="usertheme"] > [class$="btn"] {
    --btnmask: url("../../img/sanlogotrophy.svg") center / contain no-repeat;
    --btncolor: white;
    position: absolute;
    top: 50%;
    right: 0;
    translate: -50% -50%;
    display: block;
    scale: 1;
    width: 1rem;
    height: 1rem;
    background-color: var(--btncolor);
    mask: var(--btnmask);
    opacity: 0;
    transition: var(--transition);
}

dialog[selection] .rect[id^="usertheme"] > .userthemedelbtn {
    --btnmask: url("../../icon/delete.svg") center / contain no-repeat;
    --btncolor: red;
}

dialog[selection] .rect[id^="usertheme"]:not([enabled]) > .userthemedelbtn {
    pointer-events: auto;
}

dialog[selection] .rect[id^="usertheme"]:not([enabled]):hover > .userthemedelbtn {
    opacity: 0.75;
}

dialog[selection] .rect[id^="usertheme"]:not([enabled]) > .userthemedelbtn:hover {
    scale: 1.2;
    opacity: 1;
}

dialog[selection] .contentsub:has(.userthemedelbtn:hover) > .rect::before,
dialog[selection] .contentsub:has(.userthemedelbtn:hover) > .rect > span {
    filter: none;
}

dialog[selection] .contentsub:has(.userthemedelbtn:hover) > .rect::after {
    translate: -120%;
}

.addhtml {
    grid-column: 1 / -1;
    margin-top: 1rem;
    transition: margin-top var(--transition);
}

.addhtml[icons] {
    margin-top: 0;
}

.addhtml:has(> #noexeclick) {
    margin: 0;
}

.wrapper#savethemeform {
    grid-template-columns: min-content auto;
    gap: 0.5rem;
    padding: 0.5rem;
    background-color: var(--primary);
    border-radius: var(--elembr);
    transition: border-radius var(--transition);
}

.wrapper#savethemeform > input:placeholder-shown {
    outline: 0.1rem solid red;
}

.addhtml[icons] > .wrapper#savethemeform {
    border-radius: var(--elembr) var(--elembr) 0 0;
}

.wrapper#savethemeform > button {
    --icon: url("../../img/sanlogotrophy.svg");
    display: grid;
    grid-template-columns: auto min-content;
    justify-items: start;
    gap: 0.5rem;
    width: 2.5rem;
    background: var(--icon) left / 65% no-repeat;
    background-color: transparent;
    border-radius: var(--elembr);
}

.wrapper#savethemeform > button::after {
    content: "";
    width: 0.75rem;
    height: 0.75rem;
    background: url("../../icon/play.svg") center / contain no-repeat;
    pointer-events: none;
    grid-column-start: 2;
    justify-self: end;
    align-self: center;
    rotate: 90deg;
}

.contentsub:has(.addhtml[icons]) > .wrapper#contentsubitems,
.contentsub:has(.addhtml[icons]) > .wrapper#contentsubitems > *,
.contentsub:has(.addhtml[icons])::before {
    height: 0;
}

.contentsub > .wrapper#contentsubitems,
.contentsub > .wrapper#contentsubitems > *,
.contentsub::before {
    transition: height var(--transition);
}

#savethemeicons {
    display: block;
    height: 0;
    background-color: #2b2b2b;
    border-radius: 0 0 var(--elembr) var(--elembr);
    transition: height var(--transition);
    overflow: hidden scroll;
}

.wrapper#savethemeiconbtns {
    grid-template-columns: repeat(auto-fit, minmax(3rem, 1fr));
    gap: 1rem;
    padding: 1rem;
}

.addhtml[icons] > #savethemeicons {
    height: 6rem;
}

.wrapper#savethemeiconbtns > button {
    place-self: center;
    width: 3rem;
    height: 3rem;
    background: var(--icon) center / 50% no-repeat;
    background-color: transparent;
    border-radius: var(--elembr);
    transition:
        background var(--transition);
}

.wrapper#savethemeiconbtns > button:hover {
    background: var(--icon) center / 75% no-repeat var(--primary);
}

#themeiconcustom {
    --icon: url("../../icon/add.svg");
}

#themeicon0 {
    --icon: url("../../img/sanlogotrophy.svg");
}

#themeicon1 {
    --icon: url("../../icon/trophy_gold.svg");
}

#themeicon2 {
    --icon: url("../../icon/trophy_purple.svg");
}

#themeicon3 {
    --icon: url("../../icon/trophy_plat.svg");
}

#themeicon4 {
    --icon: url("../../icon/steam.svg");
}

#themeicon5 {
    --icon: url("../../icon/controller.svg");
}

#themeicon6 {
    --icon: url("../../icon/beta.svg");
}

.contentwrapper:has(.wrapper#savethemeform > input:placeholder-shown) > .btnwrapper > #okbtn,
.contentwrapper:has(.addhtml[icons]) > .btnwrapper > #okbtn {
    opacity: 0.5;
    pointer-events: none;
}

button[id$="newbtn"]:hover,
button[id$="newbtn"]:focus-visible,
button#addlinkbtn:hover,
button#addlinkbtn:focus-visible,
button#importbtn:hover,
button#importbtn:focus-visible {
    background-color: limegreen;
    filter: none;
}

.help {
    transition: color var(--transition);
    cursor: pointer;
}

.help:hover {
    color: blueviolet;
}

#linkhelpunlink {
    display: inline-block;
    width: 0.7rem;
    height: 0.7rem;
    background: url("../../icon/unlink.svg") center / contain no-repeat;
    vertical-align: middle;
}

#addlinkbtn {
    position: relative;
    transition:
        background-color var(--transition),
        font-size var(--transition),
        scale var(--transition);
}

#addlinkbtn[timer]::before {
    scale: 0;
}

#addlinkbtn[timer] {
    font-size: 0 !important;
    animation: fadetodarkblue 0.5s alternate infinite forwards;;
    pointer-events: none;
}

#addlinkbtn::after {
    content: "";
    position: absolute;
    scale: 0;
    width: 100%;
    transition: scale var(--transition) var(--transition);
}

#addlinkbtn[timer]::after {
    content: attr(timer);
    font-size: 1rem !important;
    scale: 1;
}

@keyframes fadetodarkblue {
    to { background-color: #0c2a66; };
}

/* Overrides for preventing layout reset when opening a dialog on top of another dialog (for #help window) */
.wrapper#contentcontainer:has(.tbl#linkgametablewrapper) {
    --dialogicon: url("../../icon/link.svg");
}

/* Overrides for preventing layout reset when opening a dialog on top of another dialog (for #help window) */
.wrapper#contentcontainer:has(.tbl#exclusionlisttablewrapper) {
    --dialogicon: url("../../icon/exclusion.svg");
}

/* Overrides for preventing layout reset when opening a dialog on top of another dialog (for #help window) */
.wrapper#contentcontainer:has(.tbl#themeswitchtablewrapper) {
    --dialogicon: url("../../icon/autoswitchtheme.svg");
}

/* Overrides for preventing layout reset when opening a dialog on top of another dialog (for #help window) */
.wrapper#contentcontainer:has(#noexeclick) {
    --dialogicon: url("../../icon/error.svg");
}

/* .wrapper#contentcontainer:has(.tbl) + .btnwrapper {
    grid-template-columns: repeat(2,1fr);
} */

.nodata > td {
    text-align: center;
    opacity: 0.5;
    pointer-events: none;
}

[id$="tablewrapper"] > table > tr:not([id$="headers"]):has(> td:last-child:hover) {
    background-color: red;
    cursor: pointer;
}

input[type="number"].appidinput {
    width: 100%;
    max-width: none;
    border-radius: 0;
    font-size: 0.65rem;
    background-color: transparent;
    border: none;
}

input[type="number"].appidinput[id$="appid"] {
    background-color: var(--mediumgrey);
    border-radius: var(--elembr);
}

input[type="number"].appidinput:hover {
    background-color: transparent;
}

input[type="number"].appidinput[id$="appid"]:hover {
    background-color: var(--lightgrey);
}

td:has(input[type="number"].appidinput) {
    min-width: 5rem;
    padding: 0;
}

td[id$="select"] {
    cursor: pointer;
}

td[id$="select"]:empty::before {
    content: "...";
}

td[id$="select"]:empty {
    text-align: center;
    color: grey;
}

td:has(input[type="number"].appidinput),
td#linkgameselect {
    background-color: var(--mediumgrey);
    transition: background-color var(--transition);
}

td:has(input[type="number"].appidinput):hover,
td#linkgameselect:hover {
    background-color: var(--lightgrey);
}

.contentwrapper:has(input[type="number"]:placeholder-shown, #linkgameselect:empty) > .btnwrapper > button#okbtn {
    opacity: 0.5;
    pointer-events: none;
}

dialog > #content:has(.tbl) {
    width: 65%;
}

td:has(.unlinkbtn) > .unlinkbtn {
    --menuicon: url("../../icon/unlink.svg");
    background: var(--menuicon) center / contain no-repeat;
    width: 1rem;
    height: 1rem;
    vertical-align: middle;
}

dialog:has(#linkgametablewrapper) td:has(.unlinkbtn) > .unlinkbtn {
    --menuicon: url("../../icon/unlink.svg");
}

dialog:has(#exclusionlisttablewrapper) td:has(.unlinkbtn) > .unlinkbtn {
    --menuicon: url("../../icon/unexclusion.svg");
}

dialog:has(#themeswitchtablewrapper) td:has(.unlinkbtn) > .unlinkbtn {
    --menuicon: url("../../icon/unautoswitchtheme.svg");
}

#exclusionlistheaders > th:nth-child(1) {
    width: 90%;
}

#exclusionlisttablewrapper td {
    text-align: center;
}

div[id^="themeswitch"] select {
    background-color: var(--mediumgrey);
    border-radius: 0;
}

div[id^="themeswitch"] select:hover {
    background-color: var(--lightgrey);
}

div[id^="themeswitch"] select:focus-visible {
    outline: auto;
}

div[id^="themeswitchtable"] th:not(:first-child,:last-child),
div[id^="themeswitchtable"] td:not(:first-child,:last-child) {
    width: fit-content;
    padding: 0;
}

div[id$="newtablewrapper"] th,
div[id$="newtablewrapper"] td,
div[id$="newselectwrapper"] th,
div[id$="newselectwrapper"] td {
    width: 100%;
    padding: 0;
    overflow: hidden;
}

td > span {
    display: inline-block;
    width: 0.75rem;
    height: 0.75rem;
    vertical-align: -2px;
    margin-right: 0.25rem;
    background: var(--trophy) center / contain no-repeat;
}

td > span[main] {
    --trophy: url("../../icon/trophy_gold.svg");
}

td > span[rare] {
    --trophy: url("../../icon/trophy_purple.svg");
}

td > span[plat] {
    --trophy: url("../../icon/trophy_plat.svg");
}

#themeswitchnewselectwrapper {
    margin-top: 0.5rem;
}

#themeswitchnewselectwrapper th::before {
    content: "";
    display: inline-block;
    background: var(--trophy) center / contain no-repeat;
    width: 0.75rem;
    height: 0.75rem;
    vertical-align: -2px;
    margin-right: 0.25rem;
}

#themeswitchnewselectwrapper th:first-child::before {
    --trophy: url("../../icon/trophy_gold.svg");
}

#themeswitchnewselectwrapper th:nth-child(2) {
    --trophy: url("../../icon/trophy_purple.svg");
}

#themeswitchnewselectwrapper th:last-child {
    --trophy: url("../../icon/trophy_plat.svg");
}

div#linkgamenewtablewrapper th:first-child,
div#linkgamenewtablewrapper td:first-child {
    width: 30%;
}

.helpcode {
    word-break: break-word;
}

.dialogcode {
    background-color: var(--lightgrey);
    padding: 0.1rem 0.25rem;
    font-size: 0.55rem;
    border-radius: var(--elembr);
}

.donotshowagain {
    grid-template-columns: auto auto;
    gap: 0.5rem;
    padding: 0.25rem;
    place-items: center;
}

.donotshowagain > input[type="checkbox"] {
    justify-self: end;
    border: 0.1rem solid var(--lightgrey);
}

.donotshowagain > input[type="checkbox"]:checked {
    border: none;
}

.donotshowagain > span {
    justify-self: start;
}

.addhtml > #importlog,
.wrapper#exportthemeerror {
    place-items: center;
    font-style: italic;
    background-color: var(--mediumgrey);
    border-radius: var(--elembr);
    padding: 0.25rem;
}

.addhtml > #importlog[error] {
    color: red;
}

.contentwrapper:has(.addhtml > #importlog) .contenttitle::before,
#importbtn::before {
    width: 1.5rem;
    height: 1.5rem;
}

.wrapper#exportthemeerror > code {
    user-select: all;
}

dialog[selection] .btnwrapper:has(button#userthemesync) > button#backbtn,
dialog .btnwrapper:has(button#betaexitbtn) > button#backbtn {
    display: none;
}

.contentwrapper:has(button#userthemesync) .contentsub {
    border-radius: 0;
}

button#userthemesync {
    grid-column: 1 / -1;
    font-size: 0.75rem;
    text-transform: none;
    border-radius: 0 0 var(--elembr) var(--elembr);
    background-color: var(--primary);
}

button#userthemesync::before {
    content: none;
}

div#userthemesyncstars {
    position: relative;
    display: grid;
    place-content: center;
    width: 1rem;
    height: 1rem;
    transition: calc(var(--transition) * 2);
}

body[main] dialog[selection]:not([synced]) {
    --star1: #ffc400;
    --star2: #9a31cd;
    --star3: #5082f0;
}

body[rare] dialog[selection]:not([synced]) {
    --star1: #9a31cd;
    --star2: #ffc400;
    --star3: #5082f0;
}

body[plat] dialog[selection]:not([synced]) {
    --star1: #5082f0;
    --star2: #ffc400;
    --star3: #9a31cd;
}

dialog[selection][synced="main"] {
    --star1: #ffc400;
}

dialog[selection][synced="rare"] {
    --star1: #9a31cd;
}

dialog[selection][synced="plat"] {
    --star1: #5082f0;
}

div#userthemesyncstars::before {
    background-color: var(--star2);
    z-index: 1;
}

div#userthemesyncstars > span {
    background-color: var(--star1);
    z-index: 10;
}

div#userthemesyncstars::after {
    background-color: var(--star3);
    z-index: 0;
}

div#userthemesyncstars::before,
div#userthemesyncstars::after {
    content: "";
    opacity: 0;
}

div#userthemesyncstars::before,
div#userthemesyncstars::after,
div#userthemesyncstars > span {
    --animation: starbounce calc(var(--transition) * 10) var(--offset) infinite;
    position: absolute;
    top: 50%;
    left: 50%;
    translate: -50% -50%;
    width: 1rem;
    height: 1rem;
    mask: url("../../icon/star.svg") center / contain no-repeat;
    transition: calc(var(--transition) * 2);
}

button#userthemesync:hover > div#userthemesyncstars::before,
button#userthemesync:hover > div#userthemesyncstars::after,
button#userthemesync:hover > div#userthemesyncstars > span {
    opacity: 1;
    animation: var(--animation);
}

button#userthemesync:hover > div#userthemesyncstars::before {
    --offset: 0.33s;
}

button#userthemesync:hover > div#userthemesyncstars > span {
    --offset: 0s;
    translate: calc(-50% - 2px) calc(-50% + 2px);
}

button#userthemesync:hover > div#userthemesyncstars::after {
    --offset: 0.66s;
    translate: calc(-50% + 2px) calc(-50% - 2px);
}

@keyframes starbounce {
    from { scale: 1; }
    15% { scale: 1.25; }
    30% { scale: 1; }
    to { scale: 1; }
}

button#userthemesync[sync] {
    background-color: limegreen !important;
}

dialog[selection]:has(button#userthemesync[sync]) .contentsub > button.rect,
dialog[selection][synced] .contentsub > button.rect,
body[themeswitch] dialog[selection] .contentsub > button.rect{
    opacity: 0.5;
    pointer-events: none;
}

dialog[selection][synced] .btnwrapper > button#userthemesync {
    pointer-events: none;
}

.contentwrapper:has(summary#retroarch) .contenttitle {
    --dialogicon: url("../../icon/joystick.svg");
}

.wrapper#contentsubitems > div:has(.contentsubitem > details) {
    grid-template-columns: 1fr;
}

.contentsubitem:has(details)::before {
    content: none;
}

.contentsubitem > details > summary {
    border-radius: var(--elembr);
    font-size: 0.85rem;
}

details > summary {
    display: grid;
    grid-template-columns: auto 1fr auto;
    align-items: center;
    transition:
        color var(--transition);
    cursor: pointer;
}

.contentsubitem > details > summary:hover {
    color: var(--lightblue);
}

details[open] > summary {
    margin-bottom: 0.5rem;
}

.contentsubitem > details > summary::marker {
    content: none;
}

.contentsubitem > details > summary::after {
    content: "â–¶";
    rotate: 0deg;
    transition: rotate var(--transition);
}

.contentsubitem > details[open] > summary::after {
    rotate: 90deg;
}

.contentsubitem > details > summary::before {
    --icon: url("../../img/sanlogotrophy.svg");
    content: "";
    background: var(--icon) center / contain no-repeat;
    display: inline-block;
    width: 1rem;
    height: 1rem;
    margin-right: 0.25rem;
}

.contentsubitem details > summary#retroarch::before {
    --icon: url("../../img/ra/retroarch.png");
}

.contentsubitem details > summary#dolphin::before {
    --icon: url("../../img/ra/dolphin.png");
}

.contentsubitem details > summary#pcsx2::before {
    --icon: url("../../img/ra/pcsx2.png");
}

#contentsubitems:has(div > .contentsubitem > details[open]) > div:has(details:not([open])) {
    display: none;
}

.contentsubitem ul {
    padding: 0.15rem 0.5rem;
    margin-top: 0.25rem;
    background: var(--mediumgrey);
    border-radius: var(--elembr);
    font-size: 0.6rem;
}

.contentsubitem li::marker {
    content: none;
}

.contentsubitem li::before {
    content: "â€¢";
    margin-right: 0.25rem;
}

.contentsubitem .star::after {
    content: "*";
    color: red;
}

.contentsubitem .ttdesc::before {
    margin-left: 0;
}

body[beta] dialog[default] .contentwrapper:has(.btnwrapper > #betaexitbtn) .contentsub::before {
    content: none;
}

body[beta] dialog[default] .contentwrapper:has(.btnwrapper > #betaexitbtn) .contentsub,
body[beta] dialog[default] .contentwrapper:has(.btnwrapper > #betaexitbtn) div:has(> .contentsubitem) {
    grid-template-columns: 1fr;
}

body[beta] dialog[default] .contentwrapper:has(.btnwrapper > #betaexitbtn) .contentsubitem::before {
    content: none;
}

body[beta] dialog[default] .contentwrapper:has(.btnwrapper > #betaexitbtn) .contentsubitem {
    text-align: center;
}

@media (orientation: portrait) {
    dialog[default] > #content {
        width: 75%;
    }

    .contentwrapper > .btnwrapper > button {
        grid-column: 1 / -1;
    }

    .btnwrapper > button:nth-child(1) {
        grid-row-start: 1;
    }
    
    .btnwrapper > button:nth-child(2) {
        grid-row-start: 2;
    }

    .contentwrapper > .btnwrapper {
        grid-template-columns: 1fr;
    }

    div:has(> span.contentsubitem):has(#newversion) {
        margin-block: 0.5rem 0.25rem;
        margin-right: 0;
    }
}